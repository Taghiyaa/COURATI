# Generated by Django 4.2.7 on 2025-09-30 18:23

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('courses', '0005_add_view_count_field'),
        ('accounts', '0002_major_level_alter_studentprofile_level_and_more'),
    ]

    operations = [
        migrations.AlterField(
            model_name='level',
            name='code',
            field=models.CharField(max_length=10, unique=True, verbose_name='code'),
        ),
        migrations.AlterField(
            model_name='level',
            name='description',
            field=models.TextField(blank=True, verbose_name='description'),
        ),
        migrations.AlterField(
            model_name='level',
            name='name',
            field=models.CharField(max_length=50, verbose_name='nom'),
        ),
        migrations.AlterField(
            model_name='level',
            name='order',
            field=models.PositiveIntegerField(default=0, verbose_name='ordre'),
        ),
        migrations.AlterField(
            model_name='major',
            name='code',
            field=models.CharField(max_length=10, unique=True, verbose_name='code'),
        ),
        migrations.AlterField(
            model_name='major',
            name='department',
            field=models.CharField(blank=True, max_length=100, verbose_name='département'),
        ),
        migrations.AlterField(
            model_name='major',
            name='description',
            field=models.TextField(blank=True, verbose_name='description'),
        ),
        migrations.AlterField(
            model_name='major',
            name='name',
            field=models.CharField(max_length=100, verbose_name='nom'),
        ),
        migrations.AlterField(
            model_name='major',
            name='order',
            field=models.PositiveIntegerField(default=0, verbose_name='ordre'),
        ),
        migrations.AlterField(
            model_name='user',
            name='role',
            field=models.CharField(choices=[('ADMIN', 'Administrateur'), ('STUDENT', 'Étudiant'), ('TEACHER', 'Professeur')], default='STUDENT', max_length=10, verbose_name='rôle'),
        ),
        migrations.CreateModel(
            name='TeacherProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number', models.CharField(blank=True, max_length=15, verbose_name='numéro de téléphone')),
                ('specialization', models.CharField(blank=True, help_text='Ex: Intelligence Artificielle, Algèbre, etc.', max_length=200, verbose_name='spécialisation')),
                ('bio', models.TextField(blank=True, help_text='Courte présentation du professeur', verbose_name='biographie')),
                ('office', models.CharField(blank=True, help_text='Numéro de bureau', max_length=50, verbose_name='bureau')),
                ('office_hours', models.CharField(blank=True, help_text='Ex: Lundi 14h-16h, Mercredi 10h-12h', max_length=200, verbose_name='heures de permanence')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='teacher_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'profil professeur',
                'verbose_name_plural': 'profils professeurs',
            },
        ),
        migrations.CreateModel(
            name='TeacherAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('can_edit_content', models.BooleanField(default=False, help_text='Peut modifier les informations de la matière', verbose_name='peut modifier le contenu')),
                ('can_upload_documents', models.BooleanField(default=True, help_text='Peut ajouter des documents (PDF, etc.)', verbose_name='peut uploader des documents')),
                ('can_delete_documents', models.BooleanField(default=False, help_text='Peut supprimer des documents', verbose_name='peut supprimer des documents')),
                ('can_manage_students', models.BooleanField(default=True, help_text='Peut voir la liste et progression des étudiants', verbose_name='peut gérer les étudiants')),
                ('assigned_date', models.DateTimeField(auto_now_add=True, verbose_name="date d'assignation")),
                ('notes', models.TextField(blank=True, help_text='Notes internes sur cette assignation', verbose_name='notes')),
                ('is_active', models.BooleanField(default=True, verbose_name='actif')),
                ('assigned_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_teachers', to=settings.AUTH_USER_MODEL, verbose_name='assigné par')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='teacher_assignments', to='courses.subject', verbose_name='matière')),
                ('teacher', models.ForeignKey(limit_choices_to={'role': 'TEACHER'}, on_delete=django.db.models.deletion.CASCADE, related_name='teacher_assignments', to=settings.AUTH_USER_MODEL, verbose_name='professeur')),
            ],
            options={
                'verbose_name': 'assignation professeur',
                'verbose_name_plural': 'assignations professeurs',
                'ordering': ['-assigned_date'],
                'unique_together': {('teacher', 'subject')},
            },
        ),
    ]
