# Generated by Django 4.2.7 on 2025-09-08 20:52

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('accounts', '0002_major_level_alter_studentprofile_level_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Nom de la matière')),
                ('code', models.CharField(max_length=20, unique=True, verbose_name='Code matière')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('difficulty', models.CharField(choices=[('BEGINNER', 'Débutant'), ('INTERMEDIATE', 'Intermédiaire'), ('ADVANCED', 'Avancé')], default='INTERMEDIATE', max_length=15)),
                ('credits', models.PositiveIntegerField(default=3, verbose_name='Nombre de crédits')),
                ('semester', models.PositiveIntegerField(choices=[(1, 'Semestre 1'), (2, 'Semestre 2'), (3, 'Semestre 3'), (4, 'Semestre 4'), (5, 'Semestre 5'), (6, 'Semestre 6'), (7, 'Semestre 7'), (8, 'Semestre 8')], default=1)),
                ('is_active', models.BooleanField(default=True, verbose_name='Actif')),
                ('is_featured', models.BooleanField(default=False, verbose_name='Mis en avant')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('order', models.PositiveIntegerField(default=0, verbose_name="Ordre d'affichage")),
                ('instructor', models.ForeignKey(blank=True, limit_choices_to={'is_superuser': True}, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Enseignant responsable')),
                ('levels', models.ManyToManyField(to='accounts.level', verbose_name='Niveaux concernés')),
                ('majors', models.ManyToManyField(to='accounts.major', verbose_name='Filières concernées')),
            ],
            options={
                'verbose_name': 'Matière',
                'verbose_name_plural': 'Matières',
                'ordering': ['order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Titre du document')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('document_type', models.CharField(choices=[('COURS', 'Cours magistral'), ('TD', 'Travaux dirigés'), ('TP', 'Travaux pratiques'), ('EXERCISE', 'Exercice'), ('EXAM', 'Examen'), ('CORRECTION', 'Correction'), ('VIDEO', 'Vidéo'), ('AUDIO', 'Audio'), ('SLIDE', 'Présentation'), ('REFERENCE', 'Référence')], default='COURS', max_length=15, verbose_name='Type de document')),
                ('file', models.FileField(upload_to='documents/%Y/%m/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'doc', 'docx', 'ppt', 'pptx', 'mp4', 'mp3', 'avi'])], verbose_name='Fichier')),
                ('file_size', models.PositiveIntegerField(blank=True, null=True, verbose_name='Taille (bytes)')),
                ('external_url', models.URLField(blank=True, verbose_name='URL externe')),
                ('is_active', models.BooleanField(default=True, verbose_name='Actif')),
                ('is_premium', models.BooleanField(default=False, verbose_name='Contenu premium')),
                ('download_count', models.PositiveIntegerField(default=0, verbose_name='Téléchargements')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Ordre dans la matière')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Créé par')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='courses.subject', verbose_name='Matière')),
            ],
            options={
                'verbose_name': 'Document',
                'verbose_name_plural': 'Documents',
                'ordering': ['subject', 'document_type', 'order', 'title'],
            },
        ),
        migrations.CreateModel(
            name='UserProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('NOT_STARTED', 'Non commencé'), ('IN_PROGRESS', 'En cours'), ('COMPLETED', 'Terminé'), ('PAUSED', 'En pause')], default='NOT_STARTED', max_length=15)),
                ('progress_percentage', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(100)])),
                ('time_spent', models.PositiveIntegerField(default=0, verbose_name='Temps passé (minutes)')),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('last_accessed', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('document', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_progress', to='courses.document')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_progress', to='courses.subject')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='progress', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Progression',
                'verbose_name_plural': 'Progressions',
                'indexes': [models.Index(fields=['user', 'status'], name='courses_use_user_id_c60eb1_idx'), models.Index(fields=['last_accessed'], name='courses_use_last_ac_97c80c_idx')],
                'unique_together': {('user', 'subject', 'document')},
            },
        ),
        migrations.CreateModel(
            name='UserFavorite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('favorite_type', models.CharField(choices=[('SUBJECT', 'Matière'), ('DOCUMENT', 'Document')], max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('document', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='favorited_by', to='courses.document')),
                ('subject', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='favorited_by', to='courses.subject')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favorites', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Favori',
                'verbose_name_plural': 'Favoris',
                'indexes': [models.Index(fields=['user', 'favorite_type'], name='courses_use_user_id_33ee32_idx'), models.Index(fields=['created_at'], name='courses_use_created_943b64_idx')],
                'unique_together': {('user', 'document'), ('user', 'subject')},
            },
        ),
        migrations.AddIndex(
            model_name='subject',
            index=models.Index(fields=['code'], name='courses_sub_code_e1a9ef_idx'),
        ),
        migrations.AddIndex(
            model_name='subject',
            index=models.Index(fields=['is_active', 'order'], name='courses_sub_is_acti_d44b3a_idx'),
        ),
        migrations.AddIndex(
            model_name='document',
            index=models.Index(fields=['subject', 'is_active'], name='courses_doc_subject_a7b562_idx'),
        ),
        migrations.AddIndex(
            model_name='document',
            index=models.Index(fields=['document_type'], name='courses_doc_documen_386a83_idx'),
        ),
        migrations.AddIndex(
            model_name='document',
            index=models.Index(fields=['created_at'], name='courses_doc_created_e934c6_idx'),
        ),
    ]
